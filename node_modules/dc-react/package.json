{
  "_args": [
    [
      {
        "raw": "dc-react",
        "scope": null,
        "escapedName": "dc-react",
        "name": "dc-react",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/Whoin/Documents/0_teaching&Learning/Learning/4_React_&_Redux/FullStack_React_Apps/node-dc-mongo-React"
    ]
  ],
  "_from": "dc-react@latest",
  "_id": "dc-react@0.0.3",
  "_inCache": true,
  "_location": "/dc-react",
  "_nodeVersion": "7.0.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/dc-react-0.0.3.tgz_1479045586116_0.8393512454349548"
  },
  "_npmUser": {
    "name": "soloman1124",
    "email": "soloman1124@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "dc-react",
    "scope": null,
    "escapedName": "dc-react",
    "name": "dc-react",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/dc-react/-/dc-react-0.0.3.tgz",
  "_shasum": "51b56223c6e67de8f51b4755c34b6c5d3a3976d8",
  "_shrinkwrap": null,
  "_spec": "dc-react",
  "_where": "/Users/Whoin/Documents/0_teaching&Learning/Learning/4_React_&_Redux/FullStack_React_Apps/node-dc-mongo-React",
  "author": {
    "name": "Soloman Weng"
  },
  "bugs": {
    "url": "https://github.com/soloman1124/dc-react/issues"
  },
  "dependencies": {
    "dc": "^2.0.0-beta.32",
    "react": "^15.3.2",
    "react-dom": "^15.3.2"
  },
  "description": "React Components for DC",
  "devDependencies": {
    "babel-cli": "^6.18.0",
    "babel-eslint": "^7.1.0",
    "babel-plugin-transform-class-properties": "^6.18.0",
    "babel-preset-es2015": "^6.18.0",
    "babel-preset-react": "^6.16.0",
    "babel-preset-stage-0": "^6.16.0",
    "eslint": "^3.9.1",
    "eslint-plugin-react": "^6.6.0"
  },
  "directories": {},
  "dist": {
    "shasum": "51b56223c6e67de8f51b4755c34b6c5d3a3976d8",
    "tarball": "https://registry.npmjs.org/dc-react/-/dc-react-0.0.3.tgz"
  },
  "gitHead": "5e822eb99468d177eb369a76577e66a5d7644f03",
  "homepage": "https://github.com/soloman1124/dc-react#readme",
  "keywords": [
    "dc",
    "react"
  ],
  "license": "ISC",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "soloman1124",
      "email": "soloman1124@gmail.com"
    }
  ],
  "name": "dc-react",
  "optionalDependencies": {},
  "readme": "# dc-react\nReact Components for DC.js\n\n## Usage\n\n```!javascript\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this._crossfilterContext = null;\n  }\n\n  crossfilterContext = (callback) => {\n    if (!callback) {\n      return this._crossfilterContext;\n    }\n    d3.csv('../ndx.csv', (data) => {\n      for (let d of data) {\n        d.dd = dateFormat.parse(d.date);\n        d.month = d3.time.month(d.dd);\n        d.close = +d.close;\n        d.open = +d.open;\n      }\n      this._crossfilterContext = new CrossfilterContext(data);\n      callback(this._crossfilterContext);\n    });\n  };\n\n  render() {\n    return (\n      <ChartContainer className=\"container\" crossfilterContext={this.crossfilterContext}>\n        <BubbleChart className=\"row\"\n          dimension={ctx => ctx.yearlyDimension}\n          group={ctx => ctx.yearlyPerformanceGroup}\n          width={990} height={250}\n          colorAccessor={d => d.value.absGain}\n          keyAccessor={p => p.value.absGain}\n          valueAccessor={p => p.value.percentageGain}\n          radiusValueAccessor={p => p.value.fluctuationPercentage}\n          x={d3.scale.linear().domain([-2500, 2500])}\n          y={d3.scale.linear().domain([-100, 100])}\n          r={d3.scale.linear().domain([0, 4000])}\n          colorDomain={[-500, 500]}\n        />\n        <div className=\"row\">\n          <PieChart\n            dimension={ctx => ctx.gainOrLossDimension}\n            group={ctx => ctx.gainOrLossGroup}\n            width={280} height={180}\n            radius={80}\n            label={(d) => {\n              let percent = numberFormat(d.value / this.crossfilterContext().groupAll.value() * 100);\n\n              return `${d.key} (${percent}%)`;\n            }}\n          />\n          <PieChart\n            dimension={ctx => ctx.quarterDimension}\n            group={ctx => ctx.quarterGroup}\n            width={280} height={180}\n            radius={80} innerRadius={30}\n          />\n          <RowChart\n            dimension={ctx => ctx.dayOfWeekDimension}\n            group={ctx => ctx.dayOfWeekGroup}\n            width={280} height={180}\n            elasticX={true}\n            label={d => d.key.split('.')[1]}\n          />\n        </div>\n        <DataCount\n          dimension={ctx => ctx.crossfilter}\n          group={ctx => ctx.groupAll}\n        />\n        <DataTable\n          dimension={ctx => ctx.dateDimension}\n          group={d => `${d.dd.getFullYear()}/${d.dd.getMonth()+1}`}\n          columns={[\n            'date', 'open', 'close', 'volume'\n          ]}\n        />\n        <div className=\"clearfix\" />\n      </ChartContainer>\n    );\n  }\n}\n\n```\n\nFor the concrete example, please check: https://github.com/soloman1124/dc-react-example\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/soloman1124/dc-react.git"
  },
  "scripts": {
    "babel": "babel ./components --out-dir ./lib",
    "build": "NODE_ENV=production npm run babel",
    "lint": "eslint ./components/**",
    "prepublish": "npm run build",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.0.3"
}
